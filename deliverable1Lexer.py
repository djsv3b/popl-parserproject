# Generated from deliverable1.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,10,87,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,
        4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,3,4,39,8,4,1,5,1,5,5,5,43,8,5,
        10,5,12,5,46,9,5,1,6,4,6,49,8,6,11,6,12,6,50,1,6,1,6,4,6,55,8,6,
        11,6,12,6,56,3,6,59,8,6,1,7,1,7,5,7,63,8,7,10,7,12,7,66,9,7,1,7,
        1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,3,8,79,8,8,1,9,4,9,82,8,
        9,11,9,12,9,83,1,9,1,9,1,64,0,10,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,
        8,17,9,19,10,1,0,5,4,0,37,37,42,43,45,45,47,47,3,0,65,90,95,95,97,
        122,4,0,48,57,65,90,95,95,97,122,1,0,48,57,3,0,9,10,13,13,32,32,
        97,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,
        11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,1,
        21,1,0,0,0,3,23,1,0,0,0,5,25,1,0,0,0,7,27,1,0,0,0,9,38,1,0,0,0,11,
        40,1,0,0,0,13,48,1,0,0,0,15,60,1,0,0,0,17,78,1,0,0,0,19,81,1,0,0,
        0,21,22,5,91,0,0,22,2,1,0,0,0,23,24,5,44,0,0,24,4,1,0,0,0,25,26,
        5,93,0,0,26,6,1,0,0,0,27,28,7,0,0,0,28,8,1,0,0,0,29,39,5,61,0,0,
        30,31,5,43,0,0,31,39,5,61,0,0,32,33,5,45,0,0,33,39,5,61,0,0,34,35,
        5,42,0,0,35,39,5,61,0,0,36,37,5,47,0,0,37,39,5,61,0,0,38,29,1,0,
        0,0,38,30,1,0,0,0,38,32,1,0,0,0,38,34,1,0,0,0,38,36,1,0,0,0,39,10,
        1,0,0,0,40,44,7,1,0,0,41,43,7,2,0,0,42,41,1,0,0,0,43,46,1,0,0,0,
        44,42,1,0,0,0,44,45,1,0,0,0,45,12,1,0,0,0,46,44,1,0,0,0,47,49,7,
        3,0,0,48,47,1,0,0,0,49,50,1,0,0,0,50,48,1,0,0,0,50,51,1,0,0,0,51,
        58,1,0,0,0,52,54,5,46,0,0,53,55,7,3,0,0,54,53,1,0,0,0,55,56,1,0,
        0,0,56,54,1,0,0,0,56,57,1,0,0,0,57,59,1,0,0,0,58,52,1,0,0,0,58,59,
        1,0,0,0,59,14,1,0,0,0,60,64,5,34,0,0,61,63,9,0,0,0,62,61,1,0,0,0,
        63,66,1,0,0,0,64,65,1,0,0,0,64,62,1,0,0,0,65,67,1,0,0,0,66,64,1,
        0,0,0,67,68,5,34,0,0,68,16,1,0,0,0,69,70,5,84,0,0,70,71,5,114,0,
        0,71,72,5,117,0,0,72,79,5,101,0,0,73,74,5,70,0,0,74,75,5,97,0,0,
        75,76,5,108,0,0,76,77,5,115,0,0,77,79,5,101,0,0,78,69,1,0,0,0,78,
        73,1,0,0,0,79,18,1,0,0,0,80,82,7,4,0,0,81,80,1,0,0,0,82,83,1,0,0,
        0,83,81,1,0,0,0,83,84,1,0,0,0,84,85,1,0,0,0,85,86,6,9,0,0,86,20,
        1,0,0,0,9,0,38,44,50,56,58,64,78,83,1,6,0,0
    ]

class deliverable1Lexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    ARITH_OP = 4
    ASSIGN_OP = 5
    IDENTIFIER = 6
    NUMBER = 7
    STRING = 8
    BOOLEAN = 9
    WS = 10

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'['", "','", "']'" ]

    symbolicNames = [ "<INVALID>",
            "ARITH_OP", "ASSIGN_OP", "IDENTIFIER", "NUMBER", "STRING", "BOOLEAN", 
            "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "ARITH_OP", "ASSIGN_OP", "IDENTIFIER", 
                  "NUMBER", "STRING", "BOOLEAN", "WS" ]

    grammarFileName = "deliverable1.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


