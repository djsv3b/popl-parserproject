# Generated from deliverable2.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,19,147,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,1,0,1,
        0,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,3,1,4,1,4,1,5,1,5,1,5,1,5,1,
        5,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,
        1,11,1,11,1,11,1,11,1,11,1,11,1,11,3,11,80,8,11,1,12,1,12,1,12,1,
        12,1,12,1,12,1,12,1,12,1,12,1,12,3,12,92,8,12,1,13,1,13,1,13,1,13,
        1,13,3,13,99,8,13,1,14,1,14,5,14,103,8,14,10,14,12,14,106,9,14,1,
        15,4,15,109,8,15,11,15,12,15,110,1,15,1,15,4,15,115,8,15,11,15,12,
        15,116,3,15,119,8,15,1,16,1,16,5,16,123,8,16,10,16,12,16,126,9,16,
        1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,3,17,139,
        8,17,1,18,4,18,142,8,18,11,18,12,18,143,1,18,1,18,1,124,0,19,1,1,
        3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,
        29,15,31,16,33,17,35,18,37,19,1,0,5,4,0,37,37,42,43,45,45,47,47,
        3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,1,0,48,57,3,
        0,9,10,13,13,32,32,163,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,
        0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,
        0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,
        0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,
        0,0,0,1,39,1,0,0,0,3,43,1,0,0,0,5,45,1,0,0,0,7,47,1,0,0,0,9,50,1,
        0,0,0,11,52,1,0,0,0,13,57,1,0,0,0,15,62,1,0,0,0,17,64,1,0,0,0,19,
        66,1,0,0,0,21,68,1,0,0,0,23,79,1,0,0,0,25,91,1,0,0,0,27,98,1,0,0,
        0,29,100,1,0,0,0,31,108,1,0,0,0,33,120,1,0,0,0,35,138,1,0,0,0,37,
        141,1,0,0,0,39,40,5,110,0,0,40,41,5,111,0,0,41,42,5,116,0,0,42,2,
        1,0,0,0,43,44,5,40,0,0,44,4,1,0,0,0,45,46,5,41,0,0,46,6,1,0,0,0,
        47,48,5,105,0,0,48,49,5,102,0,0,49,8,1,0,0,0,50,51,5,58,0,0,51,10,
        1,0,0,0,52,53,5,101,0,0,53,54,5,108,0,0,54,55,5,105,0,0,55,56,5,
        102,0,0,56,12,1,0,0,0,57,58,5,101,0,0,58,59,5,108,0,0,59,60,5,115,
        0,0,60,61,5,101,0,0,61,14,1,0,0,0,62,63,5,91,0,0,63,16,1,0,0,0,64,
        65,5,44,0,0,65,18,1,0,0,0,66,67,5,93,0,0,67,20,1,0,0,0,68,69,7,0,
        0,0,69,22,1,0,0,0,70,80,5,61,0,0,71,72,5,43,0,0,72,80,5,61,0,0,73,
        74,5,45,0,0,74,80,5,61,0,0,75,76,5,42,0,0,76,80,5,61,0,0,77,78,5,
        47,0,0,78,80,5,61,0,0,79,70,1,0,0,0,79,71,1,0,0,0,79,73,1,0,0,0,
        79,75,1,0,0,0,79,77,1,0,0,0,80,24,1,0,0,0,81,92,5,60,0,0,82,83,5,
        60,0,0,83,92,5,61,0,0,84,92,5,62,0,0,85,86,5,62,0,0,86,92,5,61,0,
        0,87,88,5,61,0,0,88,92,5,61,0,0,89,90,5,33,0,0,90,92,5,61,0,0,91,
        81,1,0,0,0,91,82,1,0,0,0,91,84,1,0,0,0,91,85,1,0,0,0,91,87,1,0,0,
        0,91,89,1,0,0,0,92,26,1,0,0,0,93,94,5,97,0,0,94,95,5,110,0,0,95,
        99,5,100,0,0,96,97,5,111,0,0,97,99,5,114,0,0,98,93,1,0,0,0,98,96,
        1,0,0,0,99,28,1,0,0,0,100,104,7,1,0,0,101,103,7,2,0,0,102,101,1,
        0,0,0,103,106,1,0,0,0,104,102,1,0,0,0,104,105,1,0,0,0,105,30,1,0,
        0,0,106,104,1,0,0,0,107,109,7,3,0,0,108,107,1,0,0,0,109,110,1,0,
        0,0,110,108,1,0,0,0,110,111,1,0,0,0,111,118,1,0,0,0,112,114,5,46,
        0,0,113,115,7,3,0,0,114,113,1,0,0,0,115,116,1,0,0,0,116,114,1,0,
        0,0,116,117,1,0,0,0,117,119,1,0,0,0,118,112,1,0,0,0,118,119,1,0,
        0,0,119,32,1,0,0,0,120,124,5,34,0,0,121,123,9,0,0,0,122,121,1,0,
        0,0,123,126,1,0,0,0,124,125,1,0,0,0,124,122,1,0,0,0,125,127,1,0,
        0,0,126,124,1,0,0,0,127,128,5,34,0,0,128,34,1,0,0,0,129,130,5,84,
        0,0,130,131,5,114,0,0,131,132,5,117,0,0,132,139,5,101,0,0,133,134,
        5,70,0,0,134,135,5,97,0,0,135,136,5,108,0,0,136,137,5,115,0,0,137,
        139,5,101,0,0,138,129,1,0,0,0,138,133,1,0,0,0,139,36,1,0,0,0,140,
        142,7,4,0,0,141,140,1,0,0,0,142,143,1,0,0,0,143,141,1,0,0,0,143,
        144,1,0,0,0,144,145,1,0,0,0,145,146,6,18,0,0,146,38,1,0,0,0,11,0,
        79,91,98,104,110,116,118,124,138,143,1,6,0,0
    ]

class deliverable2Lexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    ARITH_OP = 11
    ASSIGN_OP = 12
    COMP_OP = 13
    BOOL_OP = 14
    IDENTIFIER = 15
    NUMBER = 16
    STRING = 17
    BOOLEAN = 18
    WS = 19

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'not'", "'('", "')'", "'if'", "':'", "'elif'", "'else'", "'['", 
            "','", "']'" ]

    symbolicNames = [ "<INVALID>",
            "ARITH_OP", "ASSIGN_OP", "COMP_OP", "BOOL_OP", "IDENTIFIER", 
            "NUMBER", "STRING", "BOOLEAN", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "ARITH_OP", "ASSIGN_OP", "COMP_OP", 
                  "BOOL_OP", "IDENTIFIER", "NUMBER", "STRING", "BOOLEAN", 
                  "WS" ]

    grammarFileName = "deliverable2.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


